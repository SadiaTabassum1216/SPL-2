{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:4000/api/marketData';\nconst baseUrl1 = 'http://localhost:4000/api/indices';\nconst baseUrl2 = 'http://localhost:4000/api/sectorwise';\nconst baseUrl3 = 'http://localhost:4000/api/companyprofile';\nconst baseUrl4 = 'http://localhost:4000/api/companyFinance';\nexport class company {\n  constructor() {\n    this.trading_code = '';\n    this.ltp = 0;\n    this.closep = 0;\n    this.change = 0;\n    this.ycp = 0;\n    this.full_name = '';\n  }\n}\nexport class sector {\n  constructor() {\n    this.category = [];\n    this.value = [];\n    this.yvalue = [];\n    this.volume = [];\n    this.gainer = [];\n    this.loser = [];\n    this.neutral = [];\n    this.total = [];\n  }\n}\nexport class index {\n  constructor() {\n    this.dsex = '';\n    this.dses = '';\n    this.ds30 = '';\n  }\n}\nexport class MarketDataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMarketData() {\n    return this.http.get(baseUrl);\n  }\n  getFinance() {\n    return this.http.get(baseUrl4);\n  }\n  getSectorWiseData() {\n    return this.http.get(baseUrl2);\n  }\n  getIndices() {\n    return this.http.get(baseUrl1);\n  }\n  getProfile() {\n    return this.http.get(baseUrl3);\n    // return this.http.post(baseUrl3,code);\n  }\n}\n\nMarketDataService.ɵfac = function MarketDataService_Factory(t) {\n  return new (t || MarketDataService)(i0.ɵɵinject(i1.HttpClient));\n};\nMarketDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MarketDataService,\n  factory: MarketDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,MAAMA,OAAO,GAAG,sCAAsC;AACtD,MAAMC,QAAQ,GAAG,mCAAmC;AACpD,MAAMC,QAAQ,GAAG,sCAAsC;AACvD,MAAMC,QAAQ,GAAG,0CAA0C;AAC3D,MAAMC,QAAQ,GAAG,0CAA0C;AAK3D,OAAM,MAAOC,OAAO;EAQlBC;IACE,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,GAAG,GAAG,CAAC;IACZ,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,GAAG,GAAG,CAAC;IACZ,IAAI,CAACC,SAAS,GAAG,EAAE;EACrB;;AAGF,OAAM,MAAOC,MAAM;EAUjBP;IACE,IAAI,CAACQ,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,KAAK,GAAG,EAAE;EACjB;;AAIF,OAAM,MAAOC,KAAK;EAKhBhB;IACE,IAAI,CAACiB,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,IAAI,GAAG,EAAE;EAChB;;AAMF,OAAM,MAAOC,iBAAiB;EAE5BpB,YAAoBqB,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAa;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM7B,OAAO,CAAC;EACpC;EAEA8B,UAAU;IACR,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAMzB,QAAQ,CAAC;EACrC;EAEA2B,iBAAiB;IACf,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAM3B,QAAQ,CAAC;EACrC;EAEA8B,UAAU;IACR,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAM5B,QAAQ,CAAC;EACrC;EAEAgC,UAAU;IACR,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAM1B,QAAQ,CAAC;IACpC;EACD;;;AAvBWuB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAQ,SAAjBR,iBAAiB;EAAAS,YAFhB;AAAM","names":["baseUrl","baseUrl1","baseUrl2","baseUrl3","baseUrl4","company","constructor","trading_code","ltp","closep","change","ycp","full_name","sector","category","value","yvalue","volume","gainer","loser","neutral","total","index","dsex","dses","ds30","MarketDataService","http","getMarketData","get","getFinance","getSectorWiseData","getIndices","getProfile","factory","providedIn"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\services\\market-data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\nconst baseUrl = 'http://localhost:4000/api/marketData';\nconst baseUrl1 = 'http://localhost:4000/api/indices';\nconst baseUrl2 = 'http://localhost:4000/api/sectorwise';\nconst baseUrl3 = 'http://localhost:4000/api/companyprofile';\nconst baseUrl4 = 'http://localhost:4000/api/companyFinance';\n\n\n\n\nexport class company {\n  trading_code: string;\n  full_name: string;\n  ltp: number;\n  closep: number;\n  change: number;\n  ycp: number;\n\n  constructor() {\n    this.trading_code = '';\n    this.ltp = 0;\n    this.closep = 0;\n    this.change = 0;\n    this.ycp = 0;\n    this.full_name = '';\n  }\n}\n\nexport class sector {\n  category: string[];\n  value: number[];\n  yvalue: number[];\n  volume: number[];\n  gainer: number[];\n  loser: number[];\n  neutral: number[];\n  total: number[];\n\n  constructor() {\n    this.category = [];\n    this.value = [];\n    this.yvalue = [];\n    this.volume = [];\n    this.gainer = [];\n    this.loser = [];\n    this.neutral = [];\n    this.total = [];\n  }\n}\n\n\nexport class index {\n  dsex: string;\n  dses: string;\n  ds30: string;\n\n  constructor() {\n    this.dsex = '';\n    this.dses = '';\n    this.ds30 = '';\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketDataService {\n\n  constructor(private http: HttpClient) { }\n\n  getMarketData(): Observable<company[]> {\n    return this.http.get<any>(baseUrl);\n  }\n\n  getFinance(): Observable<any> {\n    return this.http.get<any>(baseUrl4);\n  }\n\n  getSectorWiseData(): Observable<sector> {\n    return this.http.get<any>(baseUrl2);\n  }\n\n  getIndices(): Observable<index> {\n    return this.http.get<any>(baseUrl1);\n  }\n\n  getProfile(): Observable<any> {\n    return this.http.get<any>(baseUrl3);\n   // return this.http.post(baseUrl3,code);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}