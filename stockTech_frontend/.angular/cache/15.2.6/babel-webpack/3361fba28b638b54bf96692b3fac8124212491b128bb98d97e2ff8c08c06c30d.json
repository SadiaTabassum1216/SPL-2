{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/technical-indicators.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-apexcharts\";\nfunction Graph2Component_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"h3\");\n    i0.ɵɵtext(3, \"MACD\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"apx-chart\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"h3\");\n    i0.ɵɵtext(7, \"SMA50\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"apx-chart\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 6)(10, \"h3\");\n    i0.ɵɵtext(11, \"EMA50\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"apx-chart\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"series\", ctx_r0.lineGraph.series)(\"chart\", ctx_r0.lineGraph.chart)(\"xaxis\", ctx_r0.lineGraph.xaxis);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"series\", ctx_r0.lineGraph2.series)(\"chart\", ctx_r0.lineGraph2.chart)(\"xaxis\", ctx_r0.lineGraph2.xaxis);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"series\", ctx_r0.lineGraph3.series)(\"chart\", ctx_r0.lineGraph3.chart)(\"xaxis\", ctx_r0.lineGraph3.xaxis);\n  }\n}\nfunction Graph2Component_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"h1\");\n    i0.ɵɵtext(2, \"You don't have access!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class Graph2Component {\n  ngOnInit() {\n    this.renderIndiceGraph2();\n    this.renderIndiceGraph();\n    this.renderIndiceGraph3();\n  }\n  constructor(TecIndSer) {\n    this.TecIndSer = TecIndSer;\n    this.y = [0, 0, 0, 0];\n    this.isAuthenticated = true;\n  }\n  receiveMACD() {\n    return this.TecIndSer.getMACD();\n  }\n  receiveSMA() {\n    return this.TecIndSer.getSMA50();\n  }\n  receiveEMA() {\n    return this.TecIndSer.getEMA50();\n  }\n  renderIndiceGraph2() {\n    this.receiveMACD().subscribe(data1 => {\n      const data = Object.entries(data1).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        series: [{\n          name: 'Index',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM'\n          }\n        }\n      };\n      this.lineGraph.render();\n    });\n  }\n  renderIndiceGraph() {\n    this.receiveSMA().subscribe(data1 => {\n      const data = Object.entries(data1).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      console.log(data);\n      this.lineGraph2 = {\n        chart: {\n          type: 'area',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        series: [{\n          name: 'Index',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM'\n          }\n        }\n      };\n      this.lineGraph2.render();\n    });\n  }\n  renderIndiceGraph3() {\n    this.receiveEMA().subscribe(data1 => {\n      const data = Object.entries(data1).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      console.log(data);\n      this.lineGraph3 = {\n        chart: {\n          type: 'candlestick',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        // series: [{\n        //   name: 'Index',\n        //   data: data,\n        // }],\n        series: [{\n          data: [{\n            x: new Date(1538778600000),\n            y: [6629.81, 6650.5, 6623.04, 6633.33]\n          }, {\n            x: new Date(1538780400000),\n            y: [6632.01, 6643.59, 6620, 6630.11]\n          }, {\n            x: new Date(1538782200000),\n            y: [6630.71, 6648.95, 6623.34, 6635.65]\n          }, {\n            x: new Date(1538784000000),\n            y: [6635.65, 6651, 6629.67, 6638.24]\n          }, {\n            x: new Date(1538785800000),\n            y: [6638.24, 6640, 6620, 6624.47]\n          }]\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM'\n          }\n        }\n      };\n      this.lineGraph3.render();\n    });\n  }\n}\nGraph2Component.ɵfac = function Graph2Component_Factory(t) {\n  return new (t || Graph2Component)(i0.ɵɵdirectiveInject(i1.TechnicalIndicatorsService));\n};\nGraph2Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Graph2Component,\n  selectors: [[\"app-graph2\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [\"id\", \"denied\", \"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [\"id\", \"right1\"], [3, \"series\", \"chart\", \"xaxis\"], [\"id\", \"right2\"], [\"id\", \"right3\"], [\"id\", \"denied\", 1, \"container\"]],\n  template: function Graph2Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, Graph2Component_div_0_Template, 13, 9, \"div\", 0);\n      i0.ɵɵtemplate(1, Graph2Component_div_1_Template, 3, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isAuthenticated);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ChartComponent],\n  styles: [\"h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n  #left[_ngcontent-%COMP%]{\\r\\n    height: 1000px;\\r\\n    width: 60%;\\r\\n    float: left;        \\r\\n    padding-top: 20px;\\r\\n  }\\r\\n\\r\\n  #left2[_ngcontent-%COMP%]{\\r\\n    float:left;\\r\\n    height: 600px;\\r\\n    width: 60%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  #right1[_ngcontent-%COMP%], #right2[_ngcontent-%COMP%], #right3[_ngcontent-%COMP%], #right4[_ngcontent-%COMP%]{\\r\\n    float: left;\\r\\n    height: 800px;\\r\\n    width: 100%;\\r\\n    display: flex;   \\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n  #right1[_ngcontent-%COMP%]{\\r\\n    padding-top: 20px;\\r\\n  }\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  display: block;\\r\\n  color: black;\\r\\n  text-align: center;\\r\\n  padding: 14px;\\r\\n  text-decoration: none;\\r\\n  font-size: 17px;\\r\\n  border: gray solid 0.5px;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    margin: auto;\\r\\n    width: 70%;   \\r\\n}\\r\\n\\r\\n#denied[_ngcontent-%COMP%]{\\r\\n  height: 400px; \\r\\n  width:100%;\\r\\n  display:flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncmFwaDIvZ3JhcGgyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtFQUNkOztFQUVBO0lBQ0UsY0FBYztJQUNkLFVBQVU7SUFDVixXQUFXO0lBQ1gsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsVUFBVTtJQUNWLGFBQWE7SUFDYixVQUFVO0lBQ1YsYUFBYTtJQUNiLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztJQUNYLGFBQWE7SUFDYixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0FBRUY7RUFDRSxjQUFjO0VBQ2QsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLGVBQWU7RUFDZix3QkFBd0I7RUFDeEIseUJBQXlCO0FBQzNCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyJoMSxoMixoM3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGNvbG9yOiBibGFjaztcclxuICB9XHJcblxyXG4gICNsZWZ0e1xyXG4gICAgaGVpZ2h0OiAxMDAwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7ICAgICAgICBcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgI2xlZnQye1xyXG4gICAgZmxvYXQ6bGVmdDtcclxuICAgIGhlaWdodDogNjAwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gICNyaWdodDEsI3JpZ2h0MiwjcmlnaHQzLCNyaWdodDR7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGhlaWdodDogODAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7ICAgXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuXHJcbiAgI3JpZ2h0MXtcclxuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gIH1cclxuXHJcbmEge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIGNvbG9yOiBibGFjaztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTRweDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgZm9udC1zaXplOiAxN3B4O1xyXG4gIGJvcmRlcjogZ3JheSBzb2xpZCAwLjVweDtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG50YWJsZXtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHdpZHRoOiA3MCU7ICAgXHJcbn1cclxuXHJcbiNkZW5pZWR7XHJcbiAgaGVpZ2h0OiA0MDBweDsgXHJcbiAgd2lkdGg6MTAwJTtcclxuICBkaXNwbGF5OmZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","Graph2Component","ngOnInit","renderIndiceGraph2","renderIndiceGraph","renderIndiceGraph3","constructor","TecIndSer","receiveMACD","getMACD","receiveSMA","getSMA50","receiveEMA","getEMA50","subscribe","data1","data","Object","entries","map","x","y","parseInt","lineGraph","chart","type","height","width","zoom","enabled","autoScaleYaxis","series","name","xaxis","labels","format","render","console","log","lineGraph2","lineGraph3","Date","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Codes\\semester_5\\StockTech\\SPL-2\\stockTech_frontend\\src\\app\\components\\graph2\\graph2.component.html","E:\\Codes\\semester_5\\StockTech\\SPL-2\\stockTech_frontend\\src\\app\\components\\graph2\\graph2.component.ts"],"sourcesContent":["<div *ngIf=\"isAuthenticated\" class=\"container\">\n  <div id=\"right1\">\n    <h3>MACD</h3>\n    <apx-chart [series]=\"lineGraph.series\" [chart]=\"lineGraph.chart\" \n    [xaxis]=\"lineGraph.xaxis\"></apx-chart>\n  </div>\n\n  <div id=\"right2\">\n    <h3>SMA50</h3>\n    <apx-chart [series]=\"lineGraph2.series\" [chart]=\"lineGraph2.chart\" \n    [xaxis]=\"lineGraph2.xaxis\"></apx-chart>\n  </div>\n\n  <div id=\"right3\">\n    <h3>EMA50</h3>\n    <apx-chart [series]=\"lineGraph3.series\" [chart]=\"lineGraph3.chart\" \n    [xaxis]=\"lineGraph3.xaxis\"></apx-chart>\n  </div>\n\n</div>\n\n<div *ngIf=\"!isAuthenticated\" id=\"denied\" class=\"container\">\n  <h1>You don't have access!</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { TechnicalIndicatorsService } from 'src/app/services/technical-indicators.service';\nimport { Observable } from 'rxjs';\n\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexPlotOptions,\n  ApexYAxis,\n  ApexLegend,\n  ApexStroke,\n  ApexXAxis,\n  ApexFill,\n  ApexTooltip,\n} from 'ng-apexcharts';\n\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n};\n\n@Component({\n  selector: 'app-graph2',\n  templateUrl: './graph2.component.html',\n  styleUrls: ['./graph2.component.css']\n})\nexport class Graph2Component implements OnInit{\n  y: [number, number, number, number] = [0,0,0,0];\n  ngOnInit(): void {\n    this.renderIndiceGraph2();\n    this.renderIndiceGraph();\n    this.renderIndiceGraph3();\n  }\n  public lineGraph: Partial<ChartOptions> | any;\n  public lineGraph2: Partial<ChartOptions> | any;\n  public lineGraph3: Partial<ChartOptions> | any;\n\n  constructor(private TecIndSer: TechnicalIndicatorsService,\n) { }\n    isAuthenticated: boolean=true;\n\n  \n\n  receiveMACD(): Observable<any> {\n    return this.TecIndSer.getMACD();\n\n  }\n  receiveSMA(): Observable<any> {\n    return this.TecIndSer.getSMA50();\n\n  }\n  receiveEMA(): Observable<any> {\n    return this.TecIndSer.getEMA50();\n\n  }\n\n  renderIndiceGraph2(): void {\n\n    this.receiveMACD().subscribe((data1) => {\n      const data = Object.entries(data1).map(([x, y]) => ({ x: parseInt(x), y: y }));\n      \n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        series: [{\n          name: 'Index',\n          data: data,\n        }\n      \n      ],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM',\n          }\n        },\n      };\n      this.lineGraph.render();\n    })\n  }\n\n  renderIndiceGraph(): void {\n\n    this.receiveSMA().subscribe((data1) => {\n      const data = Object.entries(data1).map(([x, y]) => ({ x: parseInt(x), y: y }));\n      console.log(data);\n      this.lineGraph2 = {\n        chart: {\n          type: 'area',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        series: [{\n          name: 'Index',\n          data: data,\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM',\n          }\n        },\n      };\n      this.lineGraph2.render();\n    })\n  }\n\n  renderIndiceGraph3(): void {\n\n    this.receiveEMA().subscribe((data1) => {\n      const data = Object.entries(data1).map(([x, y]) => ({ x: parseInt(x), y: y }));\n      console.log(data);\n      this.lineGraph3 = {\n        chart: {\n          type: 'candlestick',\n          height: '250%',\n          width: '90%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        // series: [{\n        //   name: 'Index',\n        //   data: data,\n        // }],\n        series: [{\n          data: [\n            { x: new Date(1538778600000), y: [6629.81, 6650.5, 6623.04, 6633.33] },\n            { x: new Date(1538780400000), y: [6632.01, 6643.59, 6620, 6630.11] },\n            { x: new Date(1538782200000), y: [6630.71, 6648.95, 6623.34, 6635.65] },\n            { x: new Date(1538784000000), y: [6635.65, 6651, 6629.67, 6638.24] },\n            { x: new Date(1538785800000), y: [6638.24, 6640, 6620, 6624.47] }\n          ]\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'dd/MM',\n          }\n        },\n      };\n      this.lineGraph3.render();\n    })\n  }\n\n//   renderIndiceGraph4(): void {\n\n//     this.receiveEMA().subscribe((data1) => {\n//       const data = Object.entries(data1).map(([x, y]) => ({ x: parseInt(x), y: y }));\n\n// this.lineGraph = {\n//   chart: {\n//     type: 'candlestick',\n//     height: '250%',\n//     width: '90%',\n//     zoom: {\n//       type: 'x',\n//       enabled: true,\n//       autoScaleYaxis: true,\n//     },\n//   },\n//   series: [{\n//     data: data.map((d) => {\n//       return {\n//         x: d.x,\n//         y: [d.y.open, d.y.high, d.y.low, d.y.close]\n//       }\n//     }),\n//   }],\n//   xaxis: {\n//     type: 'datetime',\n//     labels: {\n//       format: 'dd/MM',\n//     }\n//   },\n// };\n// this.lineGraph.render();\n\n//     })\n//   }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}