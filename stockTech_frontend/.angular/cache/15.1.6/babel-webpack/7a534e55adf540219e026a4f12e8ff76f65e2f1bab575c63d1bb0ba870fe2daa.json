{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction SignUpComponent_button_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function SignUpComponent_button_16_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendOtp());\n    });\n    i0.ɵɵtext(1, \"Verify OTP\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"OTP did not match. Try again!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SignUpComponent {\n  constructor(http) {\n    this.http = http;\n    this.phone = null;\n    this.bo = null;\n    this.email = null;\n    this.otp = null;\n    this.password = null;\n  }\n  onSubmit() {\n    // Send OTP to user's phone number\n    const data = {\n      phoneNumber: this.phone\n    };\n    this.http.post('http://localhost:8000/send-otp', data).subscribe(response => {\n      alert('OTP sent to your phone number');\n    });\n  }\n  onVerifyOTP() {\n    // Verify OTP entered by user\n    const data = {\n      phoneNumber: this.phone,\n      otp: this.otp\n    };\n    this.http.post('http://localhost:8000/verify-otp', data).subscribe(response => {\n      if (response.success) {\n        // OTP verification successful, set password and create account\n        const data = {\n          accountNumber: this.bo,\n          phoneNumber: this.phone,\n          email: this.email,\n          password: this.password\n        };\n        this.http.post('http://localhost:8000/create-account', data).subscribe(response => {\n          alert('Account created successfully');\n        });\n      } else {\n        alert('Invalid OTP');\n      }\n    });\n  }\n}\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nSignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  decls: 33,\n  vars: 6,\n  consts: [[\"action\", \"/action_page.php\"], [\"id\", \"beforeOTP\"], [\"for\", \"bo\"], [\"type\", \"text\", \"id\", \"bo\", \"name\", \"bo\", \"pattern\", \"[0-9]{20}\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"tel\", \"id\", \"phone\", \"name\", \"phone\", \"pattern\", \"[0-9]{11}\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"send\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"id\", \"afterOTP\"], [\"for\", \"otp\"], [\"type\", \"text\", \"id\", \"otp\", \"name\", \"otp\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\"], [\"id\", \"send\", 3, \"click\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Sign Up\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"p\")(5, \"label\", 2);\n      i0.ɵɵtext(6, \"BO Account Number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function SignUpComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.bo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"p\")(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Email: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function SignUpComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"p\")(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Phone Number: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function SignUpComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.Phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, SignUpComponent_button_16_Template, 2, 0, \"button\", 8);\n      i0.ɵɵtemplate(17, SignUpComponent_p_17_Template, 2, 0, \"p\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 10)(19, \"p\")(20, \"label\", 11);\n      i0.ɵɵtext(21, \"OTP:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"p\")(24, \"label\", 13);\n      i0.ɵɵtext(25, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function SignUpComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"p\")(28, \"label\", 13);\n      i0.ɵɵtext(29, \"Confirm Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 16);\n      i0.ɵɵtext(32, \"Sign Up\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.bo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.Phone);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showOtp);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.verifyOtp);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.PatternValidator, i2.NgModel, i2.NgForm, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAMQA,kCAAsD;IAA9CA;MAAAA;MAAA;MAAA,OAASA,+BAAS;IAAA,EAAC;IAA2BA,0BAAU;IAAAA,iBAAS;;;;;IACzEA,yBAAsB;IAAAA,6CAA6B;IAAAA,iBAAI;;;ACC/D,OAAM,MAAOC,eAAe;EAO1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANxB,UAAK,GAAE,IAAI;IACX,OAAE,GAAE,IAAI;IACR,UAAK,GAAE,IAAI;IACX,QAAG,GAAC,IAAI;IACR,aAAQ,GAAE,IAAI;EAE0B;EAExCC,QAAQ;IACN;IACA,MAAMC,IAAI,GAAG;MAAEC,WAAW,EAAE,IAAI,CAACC;IAAK,CAAE;IACxC,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,gCAAgC,EAAEH,IAAI,CAAC,CACnDI,SAAS,CAAEC,QAAa,IAAI;MAC3BC,KAAK,CAAC,+BAA+B,CAAC;IACxC,CAAC,CAAC;EACN;EAEAC,WAAW;IACT;IACA,MAAMP,IAAI,GAAG;MAAEC,WAAW,EAAE,IAAI,CAACC,KAAK;MAAEM,GAAG,EAAE,IAAI,CAACA;IAAG,CAAE;IACvD,IAAI,CAACV,IAAI,CAACK,IAAI,CAAC,kCAAkC,EAAEH,IAAI,CAAC,CACrDI,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAIA,QAAQ,CAACI,OAAO,EAAE;QACpB;QACA,MAAMT,IAAI,GAAG;UAAEU,aAAa,EAAE,IAAI,CAACC,EAAE;UAAEV,WAAW,EAAE,IAAI,CAACC,KAAK;UAAEU,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAQ,CAAE;QAC5G,IAAI,CAACf,IAAI,CAACK,IAAI,CAAC,sCAAsC,EAAEH,IAAI,CAAC,CACzDI,SAAS,CAAEC,QAAa,IAAI;UAC3BC,KAAK,CAAC,8BAA8B,CAAC;QACvC,CAAC,CAAC;OACL,MAAM;QACLA,KAAK,CAAC,aAAa,CAAC;;IAExB,CAAC,CAAC;EACN;;AAlCWV,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5BvB,+BAAiC;MACvBA,uBAAO;MAAAA,iBAAK;MAChBA,8BAAoB;MACCA,mCAAmB;MAAAA,iBAAQ;MAACA,gCAA0E;MAAvDA;QAAA;MAAA,EAAgB;MAAnCA,iBAA0E;MACzHA,yBAAG;MAAmBA,wBAAO;MAAAA,iBAAQ;MAACA,iCAAgE;MAA5CA;QAAA;MAAA,EAAmB;MAAvCA,iBAAgE;MACtGA,0BAAG;MAAmBA,+BAAc;MAAAA,iBAAQ;MAACA,iCAAkF;MAAhEA;QAAA;MAAA,EAAmB;MAArCA,iBAAkF;MAC/HA,wEAAyE;MACzEA,8DAAuD;MACvDA,iBAAM;MAERA,gCAAmB;MACGA,qBAAI;MAAAA,iBAAQ;MAACA,6BAAgD;MAAAA,iBAAI;MACrFA,0BAAG;MAAsBA,0BAAS;MAAAA,iBAAQ;MAACA,kCAAqF;MAA9DA;QAAA;MAAA,EAAsB;MAA7CA,iBAAqF;MAChIA,0BAAG;MAAsBA,kCAAiB;MAAAA,iBAAQ;MAACA,6BAA8D;MAAAA,iBAAI;MACrHA,mCAAsB;MAAAA,wBAAO;MAAAA,iBAAS;;;MAX4BA,eAAgB;MAAhBA,gCAAgB;MACxBA,eAAmB;MAAnBA,mCAAmB;MACdA,eAAmB;MAAnBA,mCAAmB;MAC3CA,eAAa;MAAbA,kCAAa;MAChDA,eAAgB;MAAhBA,qCAAgB;MAK8CA,eAAsB;MAAtBA,sCAAsB","names":["i0","SignUpComponent","constructor","http","onSubmit","data","phoneNumber","phone","post","subscribe","response","alert","onVerifyOTP","otp","success","accountNumber","bo","email","password","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\sign-up\\sign-up.component.html","E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\sign-up\\sign-up.component.ts"],"sourcesContent":["<form  action=\"/action_page.php\">\n      <h1>Sign Up</h1>\n      <div id=\"beforeOTP\">\n        <p><label for=\"bo\">BO Account Number: </label> <input type=\"text\" [(ngModel)]=\"bo\" id=\"bo\" name=\"bo\" pattern=\"[0-9]{20}\"></p>\n        <p><label for=\"email\">Email: </label> <input type=\"email\" [(ngModel)]=\"email\" id=\"email\" name=\"email\"></p>\n        <p><label for=\"phone\">Phone Number: </label> <input type=\"tel\" [(ngModel)]=\"Phone\" id=\"phone\" name=\"phone\" pattern=\"[0-9]{11}\"></p>\n        <button (click)=\"sendOtp()\" id=\"send\" *ngIf=\"showOtp\">Verify OTP</button>\n        <p *ngIf=\"!verifyOtp\">OTP did not match. Try again!</p>\n        </div>\n\n      <div id=\"afterOTP\">\n        <p><label for=\"otp\">OTP:</label> <input type=\"text\" id=\"otp\" name=\"otp\" required></p>\n        <p><label for=\"password\">Password:</label> <input type=\"password\" [(ngModel)]=\"password\" id=\"password\" name=\"password\" required></p>\n        <p><label for=\"password\">Confirm Password:</label> <input type=\"password\" id=\"password\" name=\"password\" required></p>\n        <button type=\"submit\">Sign Up</button>  \n    </div>\n      \n    </form>\n    ","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent {\n  phone= null;\n  bo= null;\n  email= null;\n  otp=null;\n  password= null;\n\n  constructor(private http: HttpClient) { }\n\n  onSubmit() {\n    // Send OTP to user's phone number\n    const data = { phoneNumber: this.phone };\n    this.http.post('http://localhost:8000/send-otp', data)\n      .subscribe((response: any) => {\n        alert('OTP sent to your phone number');\n      });\n  }\n\n  onVerifyOTP() {\n    // Verify OTP entered by user\n    const data = { phoneNumber: this.phone, otp: this.otp };\n    this.http.post('http://localhost:8000/verify-otp', data)\n      .subscribe((response: any) => {\n        if (response.success) {\n          // OTP verification successful, set password and create account\n          const data = { accountNumber: this.bo, phoneNumber: this.phone, email: this.email, password: this.password };\n          this.http.post('http://localhost:8000/create-account', data)\n            .subscribe((response: any) => {\n              alert('Account created successfully');\n            });\n        } else {\n          alert('Invalid OTP');\n        }\n      });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}