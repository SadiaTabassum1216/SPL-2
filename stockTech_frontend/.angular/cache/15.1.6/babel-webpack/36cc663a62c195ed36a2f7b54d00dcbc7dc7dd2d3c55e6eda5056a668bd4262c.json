{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ng-apexcharts\";\nexport class GraphComponent {\n  constructor(http) {\n    this.http = http;\n    this.code = \"GP\";\n    this.dateNow = new Date();\n    this.dateFrom = \"2022-03-19\";\n  }\n  ngOnInit() {\n    this.renderMACDGraph();\n  }\n  renderMACDGraph() {\n    this.lineGraph = {};\n    const params = {\n      code: 'GP',\n      dateFrom: '2022-03-19'\n    };\n    this.http.post('http://localhost:4000/api/MACD/', params).subscribe(data1 => {\n      // const data2 = data1['MACD']\n      // console.log(data2);\n      // const data3 = data1['Date'];\n      // console.log(data3);\n      const data2 = data1['MACD'].slice(-100);\n      console.log(data2);\n      const data3 = data1['Date'].slice(-100);\n      // console.log(data);\n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '100%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        series: [{\n          name: 'MACD',\n          data: data2\n        }],\n        xaxis: {\n          categories: data3\n        }\n      };\n      // this.lineGraph.render();\n    });\n  }\n}\n\nGraphComponent.ɵfac = function GraphComponent_Factory(t) {\n  return new (t || GraphComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nGraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GraphComponent,\n  selectors: [[\"app-graph\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"id\", \"g1\"], [3, \"series\", \"chart\", \"xaxis\"]],\n  template: function GraphComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"MACD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"apx-chart\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"series\", ctx.lineGraph.series)(\"chart\", ctx.lineGraph.chart)(\"xaxis\", ctx.lineGraph.xaxis);\n    }\n  },\n  dependencies: [i2.ChartComponent],\n  styles: [\"#g1[_ngcontent-%COMP%], #g2[_ngcontent-%COMP%], #g3[_ngcontent-%COMP%], #g4[_ngcontent-%COMP%], #g5[_ngcontent-%COMP%], #g6[_ngcontent-%COMP%]{\\r\\n    height: 300px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ncmFwaC9ncmFwaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIiNnMSwjZzIsI2czLCNnNCwjZzUsI2c2e1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AA0CA,OAAM,MAAOA,cAAc;EAazBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,SAAI,GAAW,IAAI;IACnB,YAAO,GAAS,IAAIC,IAAI,EAAE;IAC1B,aAAQ,GAAW,YAAY;EAES;EACxCC,QAAQ;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAGAA,eAAe;IACb,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,MAAMC,MAAM,GAAG;MAAEC,IAAI,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAY,CAAE;IACrD,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,iCAAiC,EAAEH,MAAM,CAAC,CAACI,SAAS,CAAEC,KAAK,IAAI;MACjF;MACA;MACA;MACA;MACA,MAAMC,KAAK,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC;MACvCC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClB,MAAMI,KAAK,GAAGL,KAAK,CAAC,MAAM,CAAC,CAACE,KAAK,CAAC,CAAC,GAAG,CAAC;MACvC;MACA,IAAI,CAACR,SAAS,GAAG;QACfY,KAAK,EAAE;UACLC,IAAI,EAAE,MAAM;UACZC,MAAM,EAAE,MAAM;UACdC,KAAK,EAAE,MAAM;UACbC,IAAI,EAAE;YACJH,IAAI,EAAE,GAAG;YACTI,OAAO,EAAE,IAAI;YACbC,cAAc,EAAE;;SAEnB;QAEDC,MAAM,EAAE,CAAC;UACPC,IAAI,EAAE,MAAM;UACZC,IAAI,EAAEd;SACP,CAAC;QACFe,KAAK,EAAE;UACLC,UAAU,EAAEZ;;OAEf;MACD;IAEF,CAAC,CAAC;EACJ;;;AAtDWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA8B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC1C3BC,8BAAa;MACPA,oBAAI;MAAAA,iBAAK;MACXA,+BACoC;MACxCA,iBAAM;;;MAFSA,eAA2B;MAA3BA,6CAA2B","names":["GraphComponent","constructor","http","Date","ngOnInit","renderMACDGraph","lineGraph","params","code","dateFrom","post","subscribe","data1","data2","slice","console","log","data3","chart","type","height","width","zoom","enabled","autoScaleYaxis","series","name","data","xaxis","categories","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\components\\graph\\graph.component.ts","E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\components\\graph\\graph.component.html"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexPlotOptions,\n  ApexYAxis,\n  ApexLegend,\n  ApexStroke,\n  ApexXAxis,\n  ApexFill,\n  ApexTooltip,\n  ApexOptions,\n} from 'ng-apexcharts';\n\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n  lineGraph: ApexOptions;\n};\n\n\n\n@Component({\n  selector: 'app-graph',\n  templateUrl: './graph.component.html',\n  styleUrls: ['./graph.component.css']\n})\n\n\n\nexport class GraphComponent implements OnInit {\n\n  public lineGraph: Partial<ChartOptions> | any;\n  public lineGraph2: Partial<ChartOptions> | any;\n  public lineGraph3: Partial<ChartOptions> | any;\n  public lineGraph4: Partial<ChartOptions> | any;\n  public lineGraph5: Partial<ChartOptions> | any;\n  public lineGraph6: Partial<ChartOptions> | any;\n\n  code: string = \"GP\";\n  dateNow: Date = new Date();\n  dateFrom: string = \"2022-03-19\";\n\n  constructor(private http: HttpClient) { }\n  ngOnInit(): void {\n    this.renderMACDGraph();\n  }\n\n\n  renderMACDGraph(): void {\n    this.lineGraph = {};\n    const params = { code: 'GP', dateFrom: '2022-03-19' };\n    this.http.post<any>('http://localhost:4000/api/MACD/', params).subscribe((data1) => {\n      // const data2 = data1['MACD']\n      // console.log(data2);\n      // const data3 = data1['Date'];\n      // console.log(data3);\n      const data2 = data1['MACD'].slice(-100);\n      console.log(data2);\n      const data3 = data1['Date'].slice(-100);\n      // console.log(data);\n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '100%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n\n        series: [{\n          name: 'MACD',\n          data: data2,\n        }],\n        xaxis: {\n          categories: data3,\n        },\n      };\n      // this.lineGraph.render();\n\n    });\n  }\n\n}","<div id=\"g1\">\n  <h2>MACD</h2>\n    <apx-chart [series]=\"lineGraph.series\" [chart]=\"lineGraph.chart\" \n  [xaxis]=\"lineGraph.xaxis\"></apx-chart>\n</div>\n<!-- \n<div id=\"g2\">\n  <h2>SMA50</h2>\n    <apx-chart [series]=\"lineGraph2.series\" [chart]=\"lineGraph2.chart\" \n  [xaxis]=\"lineGraph2.xaxis\"></apx-chart>\n</div>\n\n<div id=\"g3\">\n  <h2>EMA50</h2>\n    <apx-chart [series]=\"lineGraph3.series\" [chart]=\"lineGraph3.chart\" \n  [xaxis]=\"lineGraph3.xaxis\"></apx-chart>\n</div>\n\n<div id=\"g4\">\n  <h2>STOCK</h2>\n    <apx-chart [series]=\"lineGraph4.series\" [chart]=\"lineGraph4.chart\" \n  [xaxis]=\"lineGraph4.xaxis\"></apx-chart>\n</div>\n\n<div id=\"g5\">\n  <h2>RSI</h2>\n    <apx-chart [series]=\"lineGraph5.series\" [chart]=\"lineGraph5.chart\" \n  [xaxis]=\"lineGraph5.xaxis\"></apx-chart>\n</div>\n\n<div id=\"g6\">\n  <h2>BB</h2>\n    <apx-chart [series]=\"lineGraph6.series\" [chart]=\"lineGraph6.chart\" \n  [xaxis]=\"lineGraph6.xaxis\"></apx-chart>\n</div> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}