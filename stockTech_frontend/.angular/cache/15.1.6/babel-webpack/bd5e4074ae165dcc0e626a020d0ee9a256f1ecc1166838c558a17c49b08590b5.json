{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:4000/api/MACD';\nconst baseUrl2 = 'http://localhost:4000/api/EMA50';\nconst baseUrl3 = 'http://localhost:4000/api/SMA50';\nexport class TechnicalIndicatorsService {\n  constructor(http) {\n    this.http = http;\n  }\n  getMACD() {\n    return this.http.get(baseUrl);\n  }\n  getEMA50() {\n    return this.http.get(baseUrl2);\n  }\n  getSMA50() {\n    return this.http.get(baseUrl3);\n  }\n}\nTechnicalIndicatorsService.ɵfac = function TechnicalIndicatorsService_Factory(t) {\n  return new (t || TechnicalIndicatorsService)(i0.ɵɵinject(i1.HttpClient));\n};\nTechnicalIndicatorsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TechnicalIndicatorsService,\n  factory: TechnicalIndicatorsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAIA,MAAMA,OAAO,GAAG,gCAAgC;AAChD,MAAMC,QAAQ,GAAG,iCAAiC;AAClD,MAAMC,QAAQ,GAAG,iCAAiC;AAMlD,OAAM,MAAOC,0BAA0B;EAErCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAMP,OAAO,CAAC;EACtC;EACEQ,QAAQ;IACR,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAMN,QAAQ,CAAC;EACrC;EACEQ,QAAQ;IACR,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAML,QAAQ,CAAC;EACrC;;AAZaC,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAO,SAA1BP,0BAA0B;EAAAQ,YAFzB;AAAM","names":["baseUrl","baseUrl2","baseUrl3","TechnicalIndicatorsService","constructor","http","getMACD","get","getEMA50","getSMA50","factory","providedIn"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\services\\technical-indicators.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:4000/api/MACD';\nconst baseUrl2 = 'http://localhost:4000/api/EMA50';\nconst baseUrl3 = 'http://localhost:4000/api/SMA50';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalIndicatorsService {\n\n  constructor(private http: HttpClient) { }\n\n  getMACD(): Observable<any>{\n    return this.http.get<any>(baseUrl);\n}\n  getEMA50(): Observable<any>{\n  return this.http.get<any>(baseUrl2);\n}\n  getSMA50(): Observable<any>{\n  return this.http.get<any>(baseUrl3);\n}\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}