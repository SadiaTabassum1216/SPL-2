{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://localhost:4000/api/companyprofile';\nexport class MACD {\n  constructor() {\n    this.Date = [];\n    this.Scrip = [];\n    this.Open = [];\n    this.High = [];\n    this.Low = [];\n    this.Close = [];\n    this.PreClose = [];\n    this.AdjClose = [];\n    this.Volume = [];\n    this.Value = [];\n    this.Trade = [];\n    this.Change = [];\n    this.DateSting = [];\n    this.DateEpoch = [];\n    this.MACD = [];\n  }\n}\nexport class TechnicalIndicatorsService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProfile(code) {\n    return this.http.get(baseUrl);\n  }\n}\nTechnicalIndicatorsService.ɵfac = function TechnicalIndicatorsService_Factory(t) {\n  return new (t || TechnicalIndicatorsService)(i0.ɵɵinject(i1.HttpClient));\n};\nTechnicalIndicatorsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TechnicalIndicatorsService,\n  factory: TechnicalIndicatorsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAIA,MAAMA,OAAO,GAAG,0CAA0C;AAE1D,OAAM,MAAOC,IAAI;EAiBfC;IACE,IAAI,CAACC,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,IAAI,GAAC,EAAE;IACZ,IAAI,CAACC,IAAI,GAAC,EAAE;IACZ,IAAI,CAACC,GAAG,GAAC,EAAE;IACX,IAAI,CAACC,KAAK,GAAC,EAAE;IACb,IAAI,CAACC,QAAQ,GAAC,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAC,EAAE;IAChB,IAAI,CAACC,MAAM,GAAC,EAAE;IACd,IAAI,CAACC,KAAK,GAAC,EAAE;IACb,IAAI,CAACC,KAAK,GAAC,EAAE;IACb,IAAI,CAACC,MAAM,GAAC,EAAE;IACd,IAAI,CAACC,SAAS,GAAC,EAAE;IACjB,IAAI,CAACC,SAAS,GAAC,EAAE;IACjB,IAAI,CAACf,IAAI,GAAC,EAAE;EAEd;;AAMF,OAAM,MAAOgB,0BAA0B;EAErCf,YAAoBgB,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAU,CAACC,IAAY;IACrB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAMrB,OAAO,CAAC;EACtC;;AANaiB,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;SAA1BA,0BAA0B;EAAAK,SAA1BL,0BAA0B;EAAAM,YAFzB;AAAM","names":["baseUrl","MACD","constructor","Date","Scrip","Open","High","Low","Close","PreClose","AdjClose","Volume","Value","Trade","Change","DateSting","DateEpoch","TechnicalIndicatorsService","http","getProfile","code","get","factory","providedIn"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\services\\technical-indicators.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:4000/api/companyprofile';\n\nexport class MACD {\n  Date: string[];\n  Scrip: string[];\n  Open: number[];\n  High: number[];\n  Low: number[];\n  Close: number[];\n  PreClose: number[];\n  AdjClose: number[];\n  Volume: number[];\n  Value: number[];\n  Trade: number[];\n  Change: number[];\n  DateSting: string[];\n  DateEpoch: string[];\n  MACD: number[];\n\n  constructor() {\n    this.Date = [];\n    this.Scrip = [];\n    this.Open=[];\n    this.High=[];\n    this.Low=[];\n    this.Close=[];\n    this.PreClose=[];\n    this.AdjClose=[];\n    this.Volume=[];\n    this.Value=[];\n    this.Trade=[];\n    this.Change=[];\n    this.DateSting=[];\n    this.DateEpoch=[];\n    this.MACD=[];\n   \n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechnicalIndicatorsService {\n\n  constructor(private http: HttpClient) { }\n\n  getProfile(code: string): Observable<any>{\n    return this.http.get<any>(baseUrl);\n}\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}