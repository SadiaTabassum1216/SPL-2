{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/market-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"angular-datatables\";\nimport * as i4 from \"ng-apexcharts\";\nfunction HomeComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 9);\n  }\n}\nfunction HomeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"h3\");\n    i0.ɵɵtext(2, \"Company Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"table\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"dtOptions\", ctx_r1.dtOptions);\n  }\n}\nexport class HomeComponent {\n  constructor(MarketDataService) {\n    this.MarketDataService = MarketDataService;\n    this.dtOptions = {};\n    this.dataAvail = true;\n    this.spinner = true;\n    this.y = Array(3).fill(0);\n    this.search = '';\n  }\n  ngOnInit() {\n    this.renderDataTable();\n    this.receiveMarketData().subscribe(data => {\n      data = data.filter(function (dat) {\n        return dat.trading_code != '';\n      });\n      this.spinner = false;\n      this.dtOptions.data = data;\n      this.dataAvail = true;\n    });\n    this.renderIndiceGraph(\"dsex\");\n    this.renderIndiceGraph2(\"dses\");\n    this.renderIndiceGraph3(\"ds30\");\n    this.renderPieChart();\n    this.renderSectorGraph();\n  }\n  receiveMarketData() {\n    return this.MarketDataService.getMarketData();\n  }\n  receiveDseIndices() {\n    return this.MarketDataService.getIndices();\n  }\n  receiveSectors() {\n    return this.MarketDataService.getSectorWiseData();\n  }\n  renderDataTable() {\n    this.dtOptions = {\n      lengthChange: false,\n      language: {\n        paginate: {\n          next: '>',\n          last: 'Last',\n          first: 'First',\n          previous: '<'\n        },\n        searchPlaceholder: \"Search...\",\n        search: \"\"\n      },\n      pageLength: 20,\n      columnDefs: [{\n        width: '30em',\n        targets: [0, 1, 2, 3, 4]\n      }, {\n        name: 'some name',\n        targets: 0\n      }, {\n        orderable: true,\n        targets: [0, 1]\n      }],\n      //  data:[{\"trading_code\":\"First Janata Bank Mutual Fund\",\"ltp\":6.2,\"closep\":6.2,\"change\":-0.1,\"ycp\":6.3},{\"trading_code\":\"Prime Finance First Mutual Fund\",\"ltp\":17.2,\"closep\":17.2,\"change\":-0.1,\"ycp\":17.3},{\"trading_code\":\"aamra networks limited\",\"ltp\":39,\"closep\":39,\"change\":0.3,\"ycp\":38.7},{\"trading_code\":\"aamra technologies limited\",\"ltp\":35.8,\"closep\":35.8,\"change\":0.2,\"ycp\":35.6},{\"trading_code\":\"AB Bank 1st Mutual fund\",\"ltp\":5.6,\"closep\":5.6,\"change\":0,\"ycp\":5.6},{\"trading_code\":\"AB Bank Limited\",\"ltp\":10,\"closep\":10,\"change\":0,\"ycp\":10},{\"trading_code\":\"Aman Cotton Fibrous Limited\",\"ltp\":27.7,\"closep\":27.7,\"change\":-0.3,\"ycp\":28},{\"trading_code\":\"ACI  Limited\",\"ltp\":278.3,\"closep\":278.3,\"change\":3,\"ycp\":275.3}],\n      columns: [{\n        title: 'CODE',\n        data: 'trading_code',\n        render: function (data, type, row) {\n          row.trading_code = row.trading_code.replace(/ /g, '-');\n          if (type === 'display') {\n            if (row.change < 0) {\n              data = '<a style=\"color:red;\" href=\"' + row.scrip + '/' + row.trading_code + '\">' + data + '</a>';\n            } else if (row.change == 0) {\n              data = '<a style=\"color:#2a76e8;\" href=\"' + row.scrip + '/' + row.trading_code + '\">' + data + '</a>';\n            } else {\n              data = '<a style=\"color:green;\" href=\"' + row.scrip + '/' + row.trading_code + '\">' + data + '</a>';\n            }\n          }\n          return data;\n        }\n      }, {\n        title: 'LTP',\n        data: 'ltp'\n      }, {\n        title: 'CLOSEP',\n        data: 'closep'\n      }, {\n        title: 'CHANGE',\n        data: 'change',\n        render: function (data, type, row) {\n          if (type === 'display') {\n            if (row.change < 0) {\n              data = '<span style=\"color:red;\">' + data + '</span>';\n            } else if (row.change == 0) {\n              data = '<span style=\"color:#2a76e8;\">' + data + '</span>';\n            } else {\n              data = '<span style=\"color:green;\">' + data + '</span>';\n            }\n          }\n          return data;\n        }\n      }, {\n        title: 'YCP',\n        data: 'ycp'\n      }]\n    };\n  }\n  renderIndiceGraph(index) {\n    this.receiveDseIndices().subscribe(data1 => {\n      const data2 = data1[index];\n      const data = Object.entries(data2).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        // title: {\n        //   text: index,\n        //   align: 'center',\n        // },\n        series: [{\n          name: 'Index',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm'\n          }\n        },\n        fill: {\n          colors: ['#ffffff'],\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            inverseColors: false,\n            opacityFrom: 0.7,\n            opacityTo: 0.6,\n            stops: [0, 90, 100]\n          }\n        },\n        grid: {\n          borderColor: '#f1f1f1'\n        }\n      };\n      this.lineGraph.render();\n    });\n  }\n  renderIndiceGraph2(index) {\n    this.receiveDseIndices().subscribe(data1 => {\n      const data2 = data1[index];\n      const data = Object.entries(data2).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      this.lineGraph2 = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        series: [{\n          name: 'Index',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm'\n          }\n        }\n      };\n      this.lineGraph.render();\n    });\n  }\n  renderIndiceGraph3(index) {\n    this.receiveDseIndices().subscribe(data1 => {\n      const data2 = data1[index];\n      const data = Object.entries(data2).map(([x, y]) => ({\n        x: parseInt(x),\n        y: y\n      }));\n      this.lineGraph3 = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true\n          }\n        },\n        series: [{\n          name: 'Index',\n          data: data\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm'\n          }\n        }\n      };\n      this.lineGraph.render();\n    });\n  }\n  renderPieChart() {\n    this.receiveMarketData().subscribe(data => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].change > 0) {\n          this.y[0]++;\n        } else if (data[i].change < 0) {\n          this.y[1]++;\n        } else {\n          this.y[2]++;\n        }\n      }\n      const categories = ['Gainers', 'Losers', 'Neutral'];\n      const colours = ['#00FF00', '#FF0000', '#0000FF'];\n      console.log(this.y);\n      this.pieChart = {\n        chart: {\n          type: 'pie',\n          height: '100%',\n          width: '100%'\n        },\n        series: this.y,\n        labels: categories,\n        colors: colours\n      };\n    });\n  }\n  renderSectorGraph() {\n    this.receiveSectors().subscribe(data1 => {\n      this.barGraph = {\n        series: [{\n          name: 'Gainer',\n          data: data1[\"Winner\"],\n          color: '0B6623'\n        }, {\n          name: 'Loser',\n          data: data1[\"Loser\"],\n          color: '#d32f2f'\n        }, {\n          name: 'Neutral',\n          data: data1[\"Neutral\"],\n          color: '#2196f3'\n        }],\n        chart: {\n          type: 'bar',\n          height: 500,\n          stacked: true\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            dataLabels: {\n              total: {\n                enabled: true,\n                offsetX: 0,\n                style: {\n                  fontSize: '13px',\n                  fontWeight: 900\n                }\n              }\n            }\n          }\n        },\n        stroke: {\n          width: 1,\n          colors: ['#fff']\n        },\n        xaxis: {\n          categories: data1[\"Category\"]\n        },\n        yaxis: {\n          title: {\n            text: undefined\n          }\n        },\n        fill: {\n          opacity: 1,\n          colors: ['0B6623', '#d32f2f', '#2196f3'] // set colors for each series,\n        },\n\n        legend: {\n          position: 'top',\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      };\n      this.barGraph.render();\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.MarketDataService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 25,\n  vars: 29,\n  consts: [[\"id\", \"left\", 4, \"ngIf\"], [\"id\", \"right1\"], [3, \"series\", \"chart\", \"xaxis\"], [\"id\", \"right2\"], [\"id\", \"right3\"], [\"id\", \"right4\"], [3, \"series\", \"chart\", \"labels\", \"xaxis\", \"colors\"], [\"id\", \"left2\"], [3, \"series\", \"chart\", \"xaxis\", \"stroke\", \"tooltip\", \"dataLabels\", \"legend\", \"markers\", \"grid\", \"yaxis\", \"fill\", \"title\", \"plotOptions\"], [\"id\", \"left\"], [\"datatable\", \"\", 1, \"hover\", 3, \"dtOptions\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Welcome to StockTech!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(3, HomeComponent_div_3_Template, 1, 0, \"div\", 0);\n      i0.ɵɵtemplate(4, HomeComponent_div_4_Template, 4, 1, \"div\", 0);\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"h3\");\n      i0.ɵɵtext(7, \"DSEX\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"apx-chart\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"h3\");\n      i0.ɵɵtext(11, \"DSES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"apx-chart\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"h3\");\n      i0.ɵɵtext(15, \"DS30\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"apx-chart\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 5)(18, \"h3\");\n      i0.ɵɵtext(19, \"Gainer-Loser Ratio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"apx-chart\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 7)(22, \"h3\");\n      i0.ɵɵtext(23, \"Sector wise data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"apx-chart\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.spinner);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.spinner);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"series\", ctx.lineGraph.series)(\"chart\", ctx.lineGraph.chart)(\"xaxis\", ctx.lineGraph.xaxis);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"series\", ctx.lineGraph2.series)(\"chart\", ctx.lineGraph2.chart)(\"xaxis\", ctx.lineGraph2.xaxis);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"series\", ctx.lineGraph3.series)(\"chart\", ctx.lineGraph3.chart)(\"xaxis\", ctx.lineGraph3.xaxis);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"series\", ctx.pieChart.series)(\"chart\", ctx.pieChart.chart)(\"labels\", ctx.pieChart.labels)(\"xaxis\", ctx.pieChart.xaxis)(\"colors\", ctx.pieChart.colors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"series\", ctx.barGraph.series)(\"chart\", ctx.barGraph.chart)(\"xaxis\", ctx.barGraph.xaxis)(\"stroke\", ctx.barGraph.stroke)(\"tooltip\", ctx.barGraph.tooltip)(\"dataLabels\", ctx.barGraph.dataLabels)(\"legend\", ctx.barGraph.legend)(\"markers\", ctx.barGraph.markers)(\"grid\", ctx.barGraph.grid)(\"yaxis\", ctx.barGraph.yaxis)(\"fill\", ctx.barGraph.fill)(\"title\", ctx.barGraph.title)(\"plotOptions\", ctx.barGraph.plotOptions);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DataTableDirective, i4.ChartComponent],\n  styles: [\"h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n    color: black;\\r\\n  }\\r\\n\\r\\n\\r\\n  #left[_ngcontent-%COMP%]{\\r\\n    height: 1100px;\\r\\n    width: 60%;\\r\\n    float: left;        \\r\\n    \\r\\n    padding-top: 20px;\\r\\n  }\\r\\n\\r\\n  #left2[_ngcontent-%COMP%]{\\r\\n    float:left;\\r\\n    \\r\\n    height: 600px;\\r\\n    width: 60%;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  #right1[_ngcontent-%COMP%], #right2[_ngcontent-%COMP%], #right3[_ngcontent-%COMP%], #right4[_ngcontent-%COMP%]{\\r\\n    float: right;\\r\\n    height: 350px;\\r\\n    width: 40%;\\r\\n    display: flex;   \\r\\n    flex-direction: column;\\r\\n  }\\r\\n  #right1[_ngcontent-%COMP%]{\\r\\n    padding-top: 20px;\\r\\n    \\r\\n  }\\r\\n  #right4[_ngcontent-%COMP%]{\\r\\n    height: 650px;\\r\\n  }\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\na[_ngcontent-%COMP%] {\\r\\n  float: left;\\r\\n  display: block;\\r\\n  color: black;\\r\\n  text-align: center;\\r\\n  padding: 14px;\\r\\n  text-decoration: none;\\r\\n  font-size: 17px;\\r\\n  border: gray solid 0.5px;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #d3d3d3;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\na.active[_ngcontent-%COMP%] {\\r\\n  background-color: #2196F3;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%]{\\r\\n    margin: auto;\\r\\n    width: 70%;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiRUFBRTtJQUNFLGtCQUFrQjtJQUNsQixZQUFZO0VBQ2Q7OztFQUdBO0lBQ0UsY0FBYztJQUNkLFVBQVU7SUFDVixXQUFXO0lBQ1gsK0JBQStCO0lBQy9CLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLFVBQVU7SUFDVix5Q0FBeUM7SUFDekMsYUFBYTtJQUNiLFVBQVU7SUFDVixhQUFhO0lBQ2Isc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsWUFBWTtJQUNaLGFBQWE7SUFDYixVQUFVO0lBQ1YsYUFBYTtJQUNiLHNCQUFzQjtFQUN4QjtFQUNBO0lBQ0UsaUJBQWlCO0lBQ2pCLGlEQUFpRDtFQUNuRDtFQUNBO0lBQ0UsYUFBYTtFQUNmO0VBQ0E7Ozs7Ozs7OztLQVNHOzs7O0FBSUw7RUFDRSxXQUFXO0VBQ1gsY0FBYztFQUNkLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2Ysd0JBQXdCO0VBQ3hCLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFVBQVU7O0FBRWQiLCJzb3VyY2VzQ29udGVudCI6WyIgIGgxLGgyLGgze1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gIH1cclxuXHJcblxyXG4gICNsZWZ0e1xyXG4gICAgaGVpZ2h0OiAxMTAwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7ICAgICAgICBcclxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7ICovXHJcbiAgICBwYWRkaW5nLXRvcDogMjBweDtcclxuICB9XHJcblxyXG4gICNsZWZ0MntcclxuICAgIGZsb2F0OmxlZnQ7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNTEsIDIzNywgMjI0KTsgKi9cclxuICAgIGhlaWdodDogNjAwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gICNyaWdodDEsI3JpZ2h0MiwjcmlnaHQzLCNyaWdodDR7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgd2lkdGg6IDQwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7ICAgXHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIH1cclxuICAjcmlnaHQxe1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0NSwgMjUxLCAyMjcsIDAuODcpOyAqL1xyXG4gIH1cclxuICAjcmlnaHQ0e1xyXG4gICAgaGVpZ2h0OiA2NTBweDtcclxuICB9XHJcbiAgLyogI3JpZ2h0MntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjQ4LCAyMzIsIDI0NCwgMC44Nyk7XHJcbiAgfVxyXG4gICNyaWdodDN7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI0NCwgMjQ4LCAyMzIsIDAuODcpO1xyXG4gIH1cclxuXHJcbiAgI3JpZ2h0NHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjMyLCAyNDYsIDI0OSwgMC44Nyk7XHJcbiAgfSAqL1xyXG5cclxuXHJcblxyXG5hIHtcclxuICBmbG9hdDogbGVmdDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDE0cHg7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGZvbnQtc2l6ZTogMTdweDtcclxuICBib3JkZXI6IGdyYXkgc29saWQgMC41cHg7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxufVxyXG5cclxuYTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QzZDNkMztcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmEuYWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjE5NkYzO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxudGFibGV7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","HomeComponent","constructor","MarketDataService","Array","fill","ngOnInit","renderDataTable","receiveMarketData","subscribe","data","filter","dat","trading_code","spinner","dtOptions","dataAvail","renderIndiceGraph","renderIndiceGraph2","renderIndiceGraph3","renderPieChart","renderSectorGraph","getMarketData","receiveDseIndices","getIndices","receiveSectors","getSectorWiseData","lengthChange","language","paginate","next","last","first","previous","searchPlaceholder","search","pageLength","columnDefs","width","targets","name","orderable","columns","title","render","type","row","replace","change","scrip","index","data1","data2","Object","entries","map","x","y","parseInt","lineGraph","chart","height","zoom","enabled","autoScaleYaxis","series","xaxis","labels","format","colors","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","grid","borderColor","lineGraph2","lineGraph3","i","length","categories","colours","console","log","pieChart","barGraph","color","stacked","plotOptions","bar","horizontal","dataLabels","total","offsetX","style","fontSize","fontWeight","stroke","yaxis","text","undefined","opacity","legend","position","horizontalAlign","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\components\\home\\home.component.html","E:\\Codes\\semester 5\\stockTech_frontend\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<div>\n  <h1>Welcome to StockTech!</h1>\n</div>\n<div *ngIf=\"spinner\" id=\"left\">\n</div>\n<div *ngIf=\"!spinner\" id=\"left\">\n  <h3>Company Data</h3>\n  <table datatable [dtOptions]=\"dtOptions\" class=\"hover\"></table>\n</div>\n\n\n<div id=\"right1\">\n  <h3>DSEX</h3>\n  <apx-chart [series]=\"lineGraph.series\" [chart]=\"lineGraph.chart\" \n  [xaxis]=\"lineGraph.xaxis\"></apx-chart>\n</div>\n\n\n<div id=\"right2\">\n  <h3>DSES</h3>\n  <apx-chart [series]=\"lineGraph2.series\" [chart]=\"lineGraph2.chart\" \n  [xaxis]=\"lineGraph2.xaxis\"></apx-chart>\n</div>\n\n<div id=\"right3\">\n  <h3>DS30</h3>\n  <apx-chart [series]=\"lineGraph3.series\" [chart]=\"lineGraph3.chart\" \n  [xaxis]=\"lineGraph3.xaxis\"></apx-chart>\n</div>\n\n<div id=\"right4\">\n  <h3>Gainer-Loser Ratio</h3>\n  <apx-chart [series]=\"pieChart.series\" [chart]=\"pieChart.chart\" [labels]=\"pieChart.labels\"\n  [xaxis]=\"pieChart.xaxis\" [colors]=\"pieChart.colors\"></apx-chart>\n</div>\n\n<div id=\"left2\">\n  <h3>Sector wise data</h3>\n  <apx-chart [series]=\"barGraph.series\" [chart]=\"barGraph.chart\" [xaxis]=\"barGraph.xaxis\" [stroke]=\"barGraph.stroke\"\n  [tooltip]=\"barGraph.tooltip\" [dataLabels]=\"barGraph.dataLabels\" [legend]=\"barGraph.legend\"\n  [markers]=\"barGraph.markers\" [grid]=\"barGraph.grid\" [yaxis]=\"barGraph.yaxis\" [fill]=\"barGraph.fill\"\n  [title]=\"barGraph.title\" [plotOptions]=\"barGraph.plotOptions\"></apx-chart>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { MarketDataService } from 'src/app/services/market-data.service';\nimport { company, sector } from 'src/app/services/market-data.service';\nimport { Observable } from 'rxjs';\nimport {\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexDataLabels,\n  ApexPlotOptions,\n  ApexYAxis,\n  ApexLegend,\n  ApexStroke,\n  ApexXAxis,\n  ApexFill,\n  ApexTooltip,\n} from 'ng-apexcharts';\n\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n  yaxis: ApexYAxis;\n  xaxis: ApexXAxis;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n  stroke: ApexStroke;\n  legend: ApexLegend;\n};\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n\n  dtOptions: DataTables.Settings = {};\n  dataAvail = true;\n  public spinner: boolean = true;\n  y: number[] = Array(3).fill(0);\n  public search: string = '';\n  public lineGraph: Partial<ChartOptions> | any;\n  public lineGraph2: Partial<ChartOptions> | any;\n  public lineGraph3: Partial<ChartOptions> | any;\n  public pieChart: Partial<ChartOptions> | any;\n  public barGraph: Partial<ChartOptions> | any;\n\n  constructor(private MarketDataService: MarketDataService) { }\n\n\n  ngOnInit(): void {\n    this.renderDataTable();\n    this.receiveMarketData().subscribe((data) => {\n      data = data.filter(function (dat: any) {\n        return dat.trading_code != '';\n      });\n      this.spinner = false;\n      this.dtOptions.data = data;\n      this.dataAvail = true;\n    });\n\n    this.renderIndiceGraph(\"dsex\");\n    this.renderIndiceGraph2(\"dses\");\n    this.renderIndiceGraph3(\"ds30\");\n    this.renderPieChart();\n    this.renderSectorGraph();\n\n  }\n\n  receiveMarketData(): Observable<any> {\n    return this.MarketDataService.getMarketData();\n  }\n\n  receiveDseIndices(): Observable<any> {\n    return this.MarketDataService.getIndices();\n\n  }\n  receiveSectors(): Observable<any> {\n    return this.MarketDataService.getSectorWiseData();\n\n  }\n\n\n  renderDataTable(): void {\n    this.dtOptions = {\n      lengthChange: false,\n      language: {\n        paginate: { next: '>', last: 'Last', first: 'First', previous: '<' },\n        searchPlaceholder: \"Search...\",\n        search: \"\"\n      },\n      pageLength: 20,\n      columnDefs: [\n        { width: '30em', targets: [0, 1, 2, 3, 4] },\n        { name: 'some name', targets: 0 },\n        { orderable: true, targets: [0, 1] },\n      ],\n      //  data:[{\"trading_code\":\"First Janata Bank Mutual Fund\",\"ltp\":6.2,\"closep\":6.2,\"change\":-0.1,\"ycp\":6.3},{\"trading_code\":\"Prime Finance First Mutual Fund\",\"ltp\":17.2,\"closep\":17.2,\"change\":-0.1,\"ycp\":17.3},{\"trading_code\":\"aamra networks limited\",\"ltp\":39,\"closep\":39,\"change\":0.3,\"ycp\":38.7},{\"trading_code\":\"aamra technologies limited\",\"ltp\":35.8,\"closep\":35.8,\"change\":0.2,\"ycp\":35.6},{\"trading_code\":\"AB Bank 1st Mutual fund\",\"ltp\":5.6,\"closep\":5.6,\"change\":0,\"ycp\":5.6},{\"trading_code\":\"AB Bank Limited\",\"ltp\":10,\"closep\":10,\"change\":0,\"ycp\":10},{\"trading_code\":\"Aman Cotton Fibrous Limited\",\"ltp\":27.7,\"closep\":27.7,\"change\":-0.3,\"ycp\":28},{\"trading_code\":\"ACI  Limited\",\"ltp\":278.3,\"closep\":278.3,\"change\":3,\"ycp\":275.3}],\n      columns: [\n        {\n          title: 'CODE',\n          data: 'trading_code',\n          render: function (data, type, row) {\n            row.trading_code = row.trading_code.replace(/ /g, '-');\n            if (type === 'display') {\n              if (row.change < 0) {\n                data =\n                  '<a style=\"color:red;\" href=\"' +\n                  row.scrip +\n                  '/' +\n                  row.trading_code +\n                  '\">' +\n                  data +\n                  '</a>';\n              } else if (row.change == 0) {\n                data =\n                  '<a style=\"color:#2a76e8;\" href=\"' +\n                  row.scrip +\n                  '/' +\n                  row.trading_code +\n                  '\">' +\n                  data +\n                  '</a>';\n              } else {\n                data =\n                  '<a style=\"color:green;\" href=\"' +\n                  row.scrip +\n                  '/' +\n                  row.trading_code +\n                  '\">' +\n                  data +\n                  '</a>';\n              }\n            }\n\n            return data;\n          },\n        },\n        {\n          title: 'LTP',\n          data: 'ltp',\n        },\n        {\n          title: 'CLOSEP',\n          data: 'closep',\n        },\n        {\n          title: 'CHANGE',\n          data: 'change',\n          render: function (data, type, row) {\n            if (type === 'display') {\n              if (row.change < 0) {\n                data = '<span style=\"color:red;\">' + data + '</span>';\n              } else if (row.change == 0) {\n                data = '<span style=\"color:#2a76e8;\">' + data + '</span>';\n              } else {\n                data = '<span style=\"color:green;\">' + data + '</span>';\n              }\n            }\n\n            return data;\n          },\n        },\n        {\n          title: 'YCP',\n          data: 'ycp',\n        },\n      ],\n    };\n  }\n\n  renderIndiceGraph(index: string): void {\n\n    this.receiveDseIndices().subscribe((data1) => {\n      const data2 = data1[index];\n      const data = Object.entries(data2).map(([x, y]) => ({ x: parseInt(x), y: y }));\n\n      this.lineGraph = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        // title: {\n        //   text: index,\n        //   align: 'center',\n        // },\n        series: [{\n          name: 'Index',\n          data: data,\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm',\n          }\n        },\n        fill: {\n          colors: ['#ffffff'],\n          type: 'gradient',\n          gradient: {\n            shadeIntensity: 1,\n            inverseColors: false,\n            opacityFrom: 0.7,\n            opacityTo: 0.6,\n            stops: [0, 90, 100],\n          },\n        },\n        grid: {\n          borderColor: '#f1f1f1',\n        },\n\n      };\n      this.lineGraph.render();\n\n    })\n  }\n\n  renderIndiceGraph2(index: string): void {\n\n    this.receiveDseIndices().subscribe((data1) => {\n      const data2 = data1[index];\n      const data = Object.entries(data2).map(([x, y]) => ({ x: parseInt(x), y: y }));\n      this.lineGraph2 = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        series: [{\n          name: 'Index',\n          data: data,\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm',\n          }\n        },\n      };\n      this.lineGraph.render();\n    })\n  }\n\n  renderIndiceGraph3(index: string): void {\n\n    this.receiveDseIndices().subscribe((data1) => {\n      const data2 = data1[index]\n\n      const data = Object.entries(data2).map(([x, y]) => ({ x: parseInt(x), y: y }));\n\n      this.lineGraph3 = {\n        chart: {\n          type: 'area',\n          height: '140%',\n          width: '100%',\n          zoom: {\n            type: 'x',\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        series: [{\n          name: 'Index',\n          data: data,\n        }],\n        xaxis: {\n          type: 'datetime',\n          labels: {\n            format: 'h:mm',\n          }\n        },\n      };\n      this.lineGraph.render();\n\n    })\n  }\n\n  renderPieChart(): void {\n    this.receiveMarketData().subscribe((data: company[]) => {\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].change > 0) {\n          this.y[0]++;\n        }\n        else if (data[i].change < 0) {\n          this.y[1]++;\n        }\n        else { this.y[2]++; }\n      }\n\n      const categories = ['Gainers', 'Losers', 'Neutral'];\n      const colours = ['#00FF00', '#FF0000', '#0000FF'];\n      console.log(this.y);\n      this.pieChart = {\n        chart: {\n          type: 'pie',\n          height: '100%',\n          width: '100%',\n        },\n        series: this.y,\n        labels: categories,\n        colors: colours\n      };\n    })\n  }\n\n  \n\n\n renderSectorGraph(): void {\n  this.receiveSectors().subscribe((data1) => {\n   \n\n  this.barGraph = {\n    series: [{\n      name: 'Gainer',\n      data: data1[\"Winner\"],\n      color: '0B6623',\n           \n    }, {\n      name: 'Loser',\n      data: data1[\"Loser\"],\n      color: '#d32f2f',\n      \n    }, {\n      name: 'Neutral',\n      data: data1[\"Neutral\"],\n      color: '#2196f3',\n      \n      \n    }],\n      chart: {\n      type: 'bar',\n      height: 500,\n      stacked: true,\n    },\n    plotOptions: {\n      bar: {\n        horizontal: true,\n        dataLabels: {\n          total: {\n            enabled: true,\n            offsetX: 0,\n            style: {\n              fontSize: '13px',\n              fontWeight: 900,\n             \n            },\n          },\n        },\n        \n      },\n    },\n    stroke: {\n      width: 1,\n      colors: ['#fff']\n    },\n\n    xaxis: {\n      categories: data1[\"Category\"],\n     \n      \n    },\n    yaxis: {\n      title: {\n        text: undefined\n      },\n      \n    },\n    \n    fill: {\n      opacity: 1,\n      colors: ['0B6623', '#d32f2f', '#2196f3']// set colors for each series,\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left',\n      offsetX: 40,\n    }, \n    };\n  this.barGraph.render();\n})\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}